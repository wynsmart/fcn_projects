<PERSONAL INFO>
name: Fan Yang
nuid: 00-179-7661
email: yang.fan7@husky.neu.edu

name: Samkeet Shah
nuid: 001258979
email: shah.sam@husky.neu.edu


<TOPOLOGY>
N1                      N4
  \                    /
   \                  /
    N2--------------N3
   /                  \
  /                    \
N5                      N6


<EXPERIMENT 1>
figures to plot
x: bandwidth
y: throughput, latency, drops

# 1
CBR: N2 --> N3
TCP: N1 --> N4
start TCP first, then start CBR. increase bandwidth from 0 to max, test the four TCPs variants.

# 2
CBR: N3 --> N2
TCP: N1 --> N4
change the CBR direction, repeat last scenario


<EXPERIMENT 2>
figures to plot
x: bandwidth
y: throughput, latency, drops

# 1
CBR: N2 --> N3
TCP1: N1 --> N4
TCP2: N5 --> N6
we have two variables, so designed four sub-scenarios
* delay between starting TCP1 and TCP2 (0 to max)
* CBR bandwidth (0 to max)
1. concurrently start TCP1 and TCP2, then increase bandwidth from 0 to max;
2. fixed bandwidth at 0, start TCP1 and TCP2 with different delays
3. fixed bandwidth at half max, start TCP1 and TCP2 with different delays
4. fixed bandwidth at max, start TCP1 and TCP2 with different delays

repeat with TCP1/TCP2 as
* Reno/Reno
* NewReno/Reno
* Vegas/Vegas
* NewReno/Vegas

# 2
CBR: N2 --> N3
TCP1: N1 --> N4
TCP2: N1 --> N4
TCP3: N1 --> N4
TCP4: N1 --> N4
concurrently start four TCPs as (Tahoe/Reno/NewReno/Vegas), increase CBR rate (0 to max)


<EXPERIMENT 3>
figures to plot
x: time
y: throughput, latency

TCP: N1 --> N4
CBR: N5 --> N6

1. start TCP before CBR
2. start CBR before TCP, repeat
3. start by using a small CBR and increase CBR exponentially
4. start with small TCP bandwidth and increase bandwidth
5. vary queue size

repeat each scenario with TCP Reno and SACK, using queuing algorithms: DropTail and RED